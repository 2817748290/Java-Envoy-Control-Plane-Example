node:
  cluster: envoy_cluster
  id: envoy_node
  
admin:
  access_log:
    name: envoy.access_loggers.file,
    typed_config:
      "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
      path: /var/log/envoy/admin_access.log
  address:
    socket_address:
      protocol: TCP
      address: 0.0.0.0
      port_value: 9901

static_resources:
  listeners:                                                                           
    - name: listener_tcp_443
      address:
        socket_address:
          protocol: TCP
          address: 0.0.0.0
          port_value: 443
      per_connection_buffer_limit_bytes: 32768
      access_log:
        name: envoy.access_loggers.file
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
          path: /var/log/envoy/tcp_access_443.log
      filter_chains:
        - filters:
            - name: envoy.filters.network.tcp_proxy
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
                stat_prefix: ingress_tcp_443
                weighted_clusters:
                  clusters:
                    - name: custom_mqtt
                      weight: 100
                idle_timeout: 0s  
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              # enable mtls
#              require_client_certificate: true
              common_tls_context:
#                validation_context_sds_secret_config:
#                  name: validation_context
#                  sds_config:
#                    api_config_source:
#                      api_type: GRPC
#                      set_node_on_first_message_only: true
#                      rate_limit_settings:
#                        max_tokens:
#                          value: 1
#                        fill_rate:
#                          value: 0.1
#                      transport_api_version: V3
#                      grpc_services:
#                        - envoy_grpc:
#                            cluster_name: sds_server_mtls
                tls_certificate_sds_secret_configs:
                - name: server_cert
                  sds_config:
                    api_config_source:
                      api_type: GRPC
                      set_node_on_first_message_only: true
                      transport_api_version: V3
                      grpc_services:
                      - envoy_grpc:
                          cluster_name: sds_server_mtls
  clusters:
    - name: sds_server_mtls
      typed_extension_protocol_options:
        envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
          "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
          explicit_http_config:
            http2_protocol_options: {}
      type: STRICT_DNS 
      load_assignment:
        cluster_name: sds_server_mtls
        endpoints:
        - lb_endpoints:
          - endpoint:
              address:
                socket_address:
                  address: 192.168.1.109
                  # address: domain.com
                  port_value: 9192
      # enable gRPC TLS open this
      # transport_socket:
      #   name: envoy.transport_sockets.tls
      #   typed_config:
      #     "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
      #     common_tls_context:
      #       tls_certificate_sds_secret_configs:
      #         - name: tcssc
      #           sds_config:
      #             path: /etc/envoy/tls/tls_certificate_sds_secret.yaml
      #       validation_context_sds_secret_config:
      #         name: vcssc
      #         sds_config:
      #           path: /etc/envoy/tls/validation_context_sds_secret.yaml
            # enable gRPC TLS open this (plan B)
            # tls_certificates:
            # - certificate_chain:
            #     filename: /etc/envoy/tls/client.crt
            #   private_key:
            #     filename: /etc/envoy/tls/client.key
            # validation_context:
            #     trusted_ca:
            #       filename: /etc/envoy/tls/test/ca.crt
    - name: custom_mqtt
      connect_timeout: 20s
      per_connection_buffer_limit_bytes: 4294967295
      circuit_breakers:
        thresholds:
          - max_connections: 1000000
      type: STATIC
      lb_policy: ROUND_ROBIN
      transport_socket:
        name: envoy.transport_sockets.upstream_proxy_protocol
        typed_config:
         "@type": type.googleapis.com/envoy.extensions.transport_sockets.proxy_protocol.v3.ProxyProtocolUpstreamTransport
         config:
           version: V2
         transport_socket:
           name: envoy.transport_sockets.raw_buffer
      load_assignment:
        cluster_name: custom_mqtt
        endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    # replace self mqtt broker
                    address: 192.168.1.109
                    port_value: 1995                    
    
layered_runtime:
  layers:
    - name: static_layer_0
      static_layer:
        overload:
          global_downstream_max_connections: 100000

